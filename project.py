st.title("Analyze data of web scraping")
st.sidebar.title("Choose any thing to show")
total_books=len(df)
average_price=df["Price"].mean()
Max=df["Price"].max()
Min=df["Price"].min()
c1,c2,c3,c4=st.columns(4)
c1.metric("Total_books",total_books)
c2.metric("Highest_price",Max)
c3.metric("average_price",average_price)
c4.metric("lowest_price",Min)
#---------------------------------
st.header("DATAFRAME ✔️")
selected_category = st.sidebar.selectbox("Choose the category", df["Category"].unique())
filtered_books = df[df["Category"] == selected_category]
st.dataframe(filtered_books)
c1.image("avg_price_by_rating.png",caption='avg_price_by_rating.png')
c2.image("price_vs_rating_swarm.png",caption='price_vs_rating_swarm.png')
c3.image("rating_distribution.png",caption='rating_distribution.png')
c4.image("top_categories_vertical.png",caption='top_categories_vertical.png')
st.header("TOP_5")
st.dataframe(top_5.head())
st.header("CHEAPEST_5")
st.dataframe(cheapest_5.head())
st.header("NUMBER OF BOOKS PER RATING")
st.dataframe(num_rate)
st.header("AVERAGE PRICE BY RATING")
st.dataframe(rate)
st.header("NUMBER OF BOOKS IN EACH CATEGORY")
st.dataframe(num)
st.header("AVERAGE PRICE IN EACH CATEGORY")
st.dataframe(avg)
